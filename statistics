#!/bin/bash

[ -z ${1+x} ] || [[ ! $1 =~ (CPU|GPU) ]] && {
    echo " You must pass if you want to build for GPU or CPU"
    exit 1
}

device=$1
total=${TOTAL:-2}
date=$(date "+%Y-%m-%d_%H-%M-%S")
directory="experiments/$date"_"$device"
mkdir -p $directory
fitnessFile="experiments/$date"_"$device/fitness"
outputFile="experiments/$date"_"$device/output"
all_output="experiments/$date"_"$device/all_output"
timeFile="experiments/$date"_"$device/timefile"
[ -z ${ITERATIONS+x} ] && {
    export ITERATIONS=10000
}

export ITERATIONS

[ -z ${BATS_COUNT+x} ] && {
    export BATS_COUNT=768
}
export BATS_COUNT

[ -z ${EVALUATION_FUNCTION+x} ] && {
    export EVALUATION_FUNCTION=1
}
export EVALUATION_FUNCTION

echo "Directory: $directory"

if [ $device = "CPU" ]; then
    make cpu
else
    make gpu
fi

for i in $(seq 1 $total); do
    if [ $device = "CPU" ]; then
        ./bat > $outputFile
    else
        ./bat_gpu > $outputFile
    fi

    cat $outputFile | grep "Fitnes" | cut -d":" -f2  | tr -d " " >> $fitnessFile
    cat $outputFile | grep "Time" | cut -d":" -f2 | tr -d " " >> $timeFile
    cat $outputFile >> $all_output
done

function=$(cat $all_output | grep 'Function' | head -n1 | cut -d" " -f2)
iterations=$(cat $all_output | grep 'ITERATIONS' | head -n1 | cut -d" " -f2)
population=$(cat $all_output | grep 'POPULATION' | head -n1 | cut -d" " -f2)

time_average=$(awk "{s+=\$1} END {s/=$total; print s}" $timeFile)
time_standard_deviation=$(awk "{s+=((\$1-$time_average)^2)} END {s/=($total-1); s=sqrt(s); print s}" $timeFile)

fitness_average=$(awk "{s+=\$1} END {s/=$total; print s}" $fitnessFile)
fitness_standard_deviation=$(awk "{s+=((\$1-$fitness_average)^2)} END {s/=($total-1); s=sqrt(s); print s}" $fitnessFile)

dimensions=1000

echo "function & dimensions & population & time_average & time_standard_deviation & fitness_average & fitness_standard_deviation"
echo "$function & $dimensions & $population & $time_average & $time_standard_deviation & $fitness_average & $fitness_standard_deviation"

rm -rf $outputFile
